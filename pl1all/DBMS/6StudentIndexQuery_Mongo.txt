PL 1 DBMS Asgn 6
MongoDB Indexing and Querying

//1) Apply Index on student id in ascending order 

> db.student.find().pretty(); 
{ 
	"_id" : ObjectId("58021cfd62eb79a945d17248"), 
	"std_id" : 1, 
	"std_name" : "anil", 
	"branch" : "comp", 
	"addr" : { 
		"pin" : 411038, 
		"city" : "pune", 
		"area" : "kothrud" 
	}, 
	"subject" : [ 
		{ 
			"sub_name" : "toc", 
			"score" : 75 
		}, 
		{ 
			"sub_name" : "dbms", 
			"score" : 85 
		}, 
		{ 
			"sub_name" : "dcwsn", 
			"score" : 70 
		} 
	], 
	"ai" : [ 
		"java", 
		"databases", 
		"web" 
	] 
} 
{ 
	"_id" : ObjectId("58021d2d62eb79a945d17249"), 
	"std_id" : 3, 
	"std_name" : "chinmay", 
	"branch" : "mech", 
	"addr" : { 
		"pin" : 408038, 
		"city" : "mumbai", 
		"area" : "bandra" 
	}, 
	"subject" : [ 
		{ 
			"sub_name" : "toc", 
			"score" : 95 
		}, 
		{ 
			"sub_name" : "dbms", 
			"score" : 100 
		}, 
		{ 
			"sub_name" : "dcwsn", 
			"score" : 90 
		} 
	], 
	"ai" : [ 
		"java", 
		"alogorithm", 
		"c++" 
	] 
} 
{ 
	"_id" : ObjectId("58021d4962eb79a945d1724a"), 
	"std_id" : 4, 
	"std_name" : "dinesh", 
	"branch" : "civil", 
	"addr" : { 
		"pin" : 408038, 
		"city" : "mumbai", 
		"area" : "worli" 
	}, 
	"subject" : [ 
		{ 
			"sub_name" : "toc", 
			"score" : 45 
		}, 
		{ 
			"sub_name" : "dbms", 
			"score" : 60 
		}, 
		{ 
			"sub_name" : "dcwsn", 
			"score" : 20 
		} 
	], 
	"ai" : [ 
		"java", 
		"web", 
		"c++" 
	] 
} 
{ 
	"_id" : ObjectId("58021dc762eb79a945d1724b"), 
	"std_id" : 5, 
	"std_name" : "eshan", 
	"branch" : "it", 
	"addr" : { 
		"pin" : 411038, 
		"city" : "pune", 
		"area" : "kondhwa" 
	}, 
	"subject" : [ 
		{ 
			"sub_name" : "toc", 
			"score" : 99 
		}, 
		{ 
			"sub_name" : "dbms", 
			"score" : 98 
		}, 
		{ 
			"sub_name" : "dcwsn", 
			"score" : 95 
		} 
	], 
	"ai" : [ 
		"algorithm", 
		"web", 
		"c++" 
	] 
} 
{ 
	"_id" : ObjectId("58021de462eb79a945d1724c"), 
	"std_id" : 2, 
	"std_name" : "bobby", 
	"branch" : "entc", 
	"addr" : { 
		"pin" : 411038, 
		"city" : "pune", 
		"area" : "nagar" 
	}, 
	"subject" : [ 
		{ 
			"sub_name" : "toc", 
			"score" : 34 
		}, 
		{ 
			"sub_name" : "dbms", 
			"score" : 82 
		}, 
		{ 
			"sub_name" : "dcwsn", 
			"score" : 65 
		} 
	], 
	"ai" : [ 
		"java", 
		"networking", 
		"c++" 
	] 
} 


//2)Apply unique index on studentid

>db.students.ensureIndex({"std_id":1},{unique:true})
{
	"createdCollectionAutomatically" : false,
	"numIndexesBefore" : 1,
	"numIndexesAfter" : 2,
	"ok" : 1
------------------------------------------------------------

//3. Display students staying in Pune city.

> db.student.find({"addr.city" : "pune"}).pretty(); 
------------------------------------------------------------

//4. Display students from ENTC branch or having student id 1.
> db.student.find({"$or" : [{"std_id" : 1}, {"branch" : "entc"}]}).pretty(); 

------------------------------------------------------------

//5.A Display students with area of interest Java AND Web.

>db.student.find({"ai" : { "$all" : [ "java", "web" ]}}).pretty();
 
//5.B Display students with area of interest Java OR Web

> db.student.find({"ai" : { "$in" : [ "java", "web" ]}}).pretty();
------------------------------------------------------------

//6. Display students with branch COMP and  area of interest Java.

>db.student.find({"ai" : "java", "branch" : "comp"}).pretty(); 


------------------------------------------------------------

//7. Display students scored more than 85 marks in DBMSA.

>db.student.find({"subject.sub_name":"dbms", "subject.score": {"$gte" : 85}}).pretty(); 

------------------------------------------------------------

//8. Display students scored more than 90 marks in All subjects.

>db.student.find({"subject.score": {"$gte" : 90}}).pretty(); 

------------------------------------------------------------

//9. Display students having score greater than 50 and less than 70 in TOC. 

>db.student.find({“subject.sub_name”:”dbms”, "subject.score":{“$gt”:50,”$lt”:70}}).pretty()
------------------------------------------------------------

//10. Display score of students  for DBMS in ascending order. 

>db.student.find({"subject.sub_name":"dbms"},{"subject.sub_name":1,"subject.score":1,"std_id":1}).sort({"subject.score":1}).pretty(); 
------------------------------------------------------------

//11. Find out name of student starting with 'A'.

>> db.student.find({"std_name":{"$regex":"^a.*","$options":"$i"}}).pretty(); 

------------------------------------------------------------

//12. Find out name of student consists of 'Kumar'.

> db.student.find({“stud_name”:/kumar/i}).pretty()

------------------------------------------------------------

//13. Display name of all students with studentid. 

> db.student.find({},{"std_name":1,"std_id":1,"_id":0}).sort({"std_id":1}).pretty() 

